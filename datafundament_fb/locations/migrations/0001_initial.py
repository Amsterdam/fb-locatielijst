# Generated by Django 5.0.1 on 2024-01-06 17:34

import django.db.models.deletion
import locations.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExternalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Externe API')),
                ('short_name', models.CharField(max_length=10, validators=[locations.models.validate_short_name], verbose_name='Korte naam')),
            ],
            options={
                'verbose_name': 'Externe koppeling',
                'verbose_name_plural': 'Externe koppelingen',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pandcode', models.IntegerField(default=locations.models.compute_pandcode)),
                ('naam', models.CharField(max_length=100, verbose_name='Locatie')),
                ('mut_datum', models.DateField(auto_now=True, verbose_name='Laatste wijziging')),
            ],
            options={
                'verbose_name': 'Locatie',
            },
        ),
        migrations.CreateModel(
            name='LocationData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Waarde')),
                ('last_modified', models.DateField(auto_now=True, verbose_name='Laatste wijziging')),
            ],
            options={
                'verbose_name': 'Locatie gegeven',
                'verbose_name_plural': 'Locatie gegevens',
            },
        ),
        migrations.CreateModel(
            name='LocationExternalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_location_code', models.CharField(max_length=100, verbose_name='Externe locatie code')),
            ],
            options={
                'verbose_name': 'Locatie koppeling',
                'verbose_name_plural': 'Locatie koppeling',
            },
        ),
        migrations.CreateModel(
            name='LocationProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, null=True, verbose_name='Volgorde')),
                ('short_name', models.CharField(max_length=10, validators=[locations.models.validate_short_name], verbose_name='Korte naam')),
                ('label', models.CharField(max_length=100, verbose_name='Omschrijving')),
                ('required', models.BooleanField(default=False, verbose_name='Verplicht veld')),
                ('multiple', models.BooleanField(default=False, verbose_name='Meervoudige invoer')),
                ('unique', models.BooleanField(default=False, verbose_name='Waarde moet uniek zijn')),
                ('property_type', models.CharField(choices=[('BOOL', 'Boolean'), ('DATE', 'Datum'), ('EMAIL', 'E-mail'), ('INT', 'Numeriek'), ('MEMO', 'Memo'), ('POST', 'Postcode'), ('URL', 'Url'), ('CHOICE', 'Keuzelijst')], max_length=10, verbose_name='Gegevens type')),
            ],
            options={
                'verbose_name': 'Locatie eigenschap',
                'verbose_name_plural': 'Locatie eigenschappen',
            },
        ),
        migrations.CreateModel(
            name='PropertyOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(max_length=100, verbose_name='Optie')),
            ],
            options={
                'verbose_name': 'Eigenschap optie',
                'verbose_name_plural': 'Eigenschappen opties',
            },
        ),
        migrations.AddConstraint(
            model_name='externalservice',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_service_short_name'),
        ),
        migrations.AddConstraint(
            model_name='externalservice',
            constraint=models.UniqueConstraint(fields=('short_name',), name='unique_service_name'),
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.UniqueConstraint(fields=('pandcode',), name='pandcode'),
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.UniqueConstraint(fields=('naam',), name='unique_location_name'),
        ),
        migrations.AddField(
            model_name='locationdata',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.location', verbose_name='Locatie'),
        ),
        migrations.AddField(
            model_name='locationexternalservice',
            name='external_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.externalservice', verbose_name='Externe API'),
        ),
        migrations.AddField(
            model_name='locationexternalservice',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.location', verbose_name='Locatie'),
        ),
        migrations.AddConstraint(
            model_name='locationproperty',
            constraint=models.UniqueConstraint(fields=('short_name',), name='unique_location_property_name'),
        ),
        migrations.AddConstraint(
            model_name='locationproperty',
            constraint=models.UniqueConstraint(fields=('label',), name='unique_location_property_label'),
        ),
        migrations.AddField(
            model_name='locationdata',
            name='location_property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.locationproperty', verbose_name='Locatie eigenschap'),
        ),
        migrations.AddField(
            model_name='propertyoption',
            name='location_property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.locationproperty', verbose_name='Locatie eigenschap'),
        ),
        migrations.AddField(
            model_name='locationdata',
            name='property_option',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='locations.propertyoption', verbose_name='Optie'),
        ),
        migrations.AddConstraint(
            model_name='propertyoption',
            constraint=models.UniqueConstraint(fields=('location_property', 'option'), name='unique_property_option'),
        ),
        migrations.AddConstraint(
            model_name='locationdata',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('property_option__isnull', False), ('value__isnull', True)), models.Q(('property_option__isnull', True), ('value__isnull', False)), _connector='OR'), name='either_field_filled', violation_error_message='Either option or value must be filled.'),
        ),
    ]
