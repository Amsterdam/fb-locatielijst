x-app: &base-app
  build:
    context: .
    target: app
  volumes:
    - .:/app/
  env_file: 
    - ./.app.env
  depends_on:
    database:
      condition: service_healthy

services:
  app:
    <<: *base-app
    build:
      context: .
      target: app
    image: ${REGISTRY:-127.0.0.1:5000}/${REPOSITORY:-opdrachten/fb-locatielijst}:${VERSION:-latest}
    command: /app/deploy/docker-run.sh
    ports:
      - "8000:8000"

  dev:
    <<: *base-app
    build:
      context: .
      target: dev
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./.app.env
    ports:
      - "8000:8000"

  test:
    <<: *base-app
    ports:
      - "3000:3000"
    build:
      context: .
      target: tests
    environment:
      OIDC_RP_CLIENT_ID: tests
      OIDC_RP_CLIENT_SECRET: tests
    command:
      pytest

  linting:
    build:
      context: .
      target: linting
    volumes:
      - ./src:/app/src
  
  database:
    image: postgis/postgis:16-3.4-alpine
    environment:
      POSTGRES_USER: fbl
      POSTGRES_PASSWORD: insecure
      POSTGRES_DB: fbl
    ports:
      - "54321:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "fbl", "-U", "fbl" ]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgresqldata: